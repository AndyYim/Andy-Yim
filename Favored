import javax.swing.*;
import java.awt.*;
import java.awt.image.*;
import javax.imageio.*;
import java.io.*;
import java.util.Scanner;
import java.util.*;
import java.io.File;
import java.io.IOException;
import java.io.FileWriter;
import java.io.BufferedWriter;
/**
 * The class Favored is a component of the replica of the Exploding Kittens game. 
 * @prereq      none
 * @param      oneChoice, twoChoice, threeChoice, fourChoice, size, EKC, player1, player2, player3, player4, stat
 * @return       none             
 * @post        The program prints out a window containing a simulation of the game "Exploding Kittens" and inputs into and outputs files representing components of "Exploding Kittens".
 * Andy Yim and Tommy Yim 
 * 
 */
public class Favored extends Game
{
    // instance variables
    int size;
    /**
     * Constructor for objects of class Favored
     */
    public Favored()
    {
        // initialise instance variables
        super();
    }//ends Favored constructor
    public void firstPlayerFavored(String twoChoice, String threeChoice, String fourChoice, int size, ArrayList<String> EKC, ArrayList<String> player1, ArrayList<String> player2, ArrayList<String> player3, ArrayList<String> player4, int stat) throws IOException
    {
        Attacked atk = new Attacked();
        String p2 = "C:\\Users\\1049467\\Desktop\\EKHand2.txt";
        String p3 = "C:\\Users\\1049467\\Desktop\\EKHand3.txt";
        String p4 = "C:\\Users\\1049467\\Desktop\\EKHand4.txt";
        Scanner scan = new Scanner(System.in);
        if (twoChoice.equals("Favor"))
        {
            System.out.println("P1, Choose a number to give a card from the hand: " + "(left to right) 0-" + (player1.size()-1));
            int numSteal = scan.nextInt();
            player2.add(player1.get(numSteal));
            player1.remove(numSteal);
            if (stat == 2)
            {
                secondPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2
            if (stat == 02)
            {
                atk.secondPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2Attacked
        }//if p2's choice is Favor & p2 chose p1, then p1 gives a card of p1's choosing to p2
        if (threeChoice.equals("Favor"))
        {
            System.out.println("P1, choose a number to give a card from the hand: " + "(left to right) 0-" + (player1.size()-1));
            int numSteal = scan.nextInt();
            player3.add(player1.get(numSteal));
            player1.remove(numSteal);
            if (stat == 3)
            {
                thirdPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3
            if (stat == 03)
            {
                atk.thirdPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3Attacked
        }//if p3's choice is Favor & p3 chose p1, then p1 gives a card of p1's choosing to p3
        if (fourChoice.equals("Favor"))
        {
            System.out.println("P1, Choose a number to give a card from the hand: " + "(left to right) 0-" + (player2.size()-1));
            int numSteal = scan.nextInt();
            player4.add(player1.get(numSteal));
            player1.remove(numSteal);
            if (stat == 4)
            {
                fourthPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4
            if (stat == 04)
            {
                atk.fourthPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4Attacked
        }//if p4's choice is Favor & p4 chose p1, then p1 gives a card of p1's choosing to p4
    }//end firstPlayerFavored method
    public void secondPlayerFavored(String oneChoice, String threeChoice, String fourChoice, int size, ArrayList<String> EKC, ArrayList<String> player1, ArrayList<String> player2, ArrayList<String> player3, ArrayList<String> player4, int stat) throws IOException
    {
        Attacked atk = new Attacked();
        String p1 = "C:\\Users\\1049467\\Desktop\\EKHand1.txt";
        String p3 = "C:\\Users\\1049467\\Desktop\\EKHand3.txt";
        String p4 = "C:\\Users\\1049467\\Desktop\\EKHand4.txt";
        Scanner scan = new Scanner(System.in);
        if (oneChoice.equals("Favor"))
        {
            System.out.println("P2, choose a number to give a card from the hand: " + "(left to right) 0-" + (player2.size()-1));
            int numSteal = scan.nextInt();
            player1.add(player2.get(numSteal));
            player2.remove(numSteal);
            if (stat == 1)
            {
                firstPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1
            if (stat == 01)
            {
                atk.firstPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1Attacked
        }//if p1's choice is Favor & p1 chose p2, then p2 gives a card of p2's choosing to p1
        if (threeChoice.equals("Favor"))
        {
            System.out.println("P2, choose a number to give a card from the hand: " + "(left to right) 0-" + (player2.size()-1));
            int numSteal = scan.nextInt();
            player3.add(player2.get(numSteal));
            player2.remove(numSteal);
            if (stat == 3)
            {
                thirdPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3
            if (stat == 03)
            {
                atk.thirdPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3Attacked
        }//if p3's choice is Favor & p3 chose p2, then p2 gives a card of p2's choosing to p3
        if (fourChoice.equals("Favor"))
        {
            System.out.println("P2, choose a number to give a card from the hand: " + "(left to right) 0-" + (player2.size()-1));
            int numSteal = scan.nextInt();
            player4.add(player2.get(numSteal));
            player2.remove(numSteal);
            if (stat == 4)
            {
                fourthPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4
            if (stat == 04)
            {
                atk.fourthPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4Attacked
        }//if p4's choice is Favor & p4 chose p2, then p2 gives a card of p2's choosing to p4
    }//end secondPlayerFavored method
    public void thirdPlayerFavored(String oneChoice, String twoChoice, String fourChoice, int size, ArrayList<String> EKC, ArrayList<String> player1, ArrayList<String> player2, ArrayList<String> player3, ArrayList<String> player4, int stat) throws IOException
    {
        Attacked atk = new Attacked();
        String p1 = "C:\\Users\\1049467\\Desktop\\EKHand1.txt";
        String p2 = "C:\\Users\\1049467\\Desktop\\EKHand2.txt";
        String p4 = "C:\\Users\\1049467\\Desktop\\EKHand4.txt";
        Scanner scan = new Scanner(System.in);
        if (oneChoice.equals("Favor"))
        {
            System.out.println("P3, choose a number to give a card from the hand: " + "(left to right) 0-" + (player3.size()-1));
            int numSteal = scan.nextInt();
            player1.add(player3.get(numSteal));
            player3.remove(numSteal);
            if (stat == 1)
            {
                firstPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1
            if (stat == 01)
            {
                atk.firstPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1Attacked
        }//if p1's choice is Favor & p1 chose p3, then p3 gives a card of p3's choosing to p1
        if (twoChoice.equals("Favor"))
        {
            System.out.println("P3, choose a number to give a card from the hand: " + "(left to right) 0-" + (player3.size()-1));
            int numSteal = scan.nextInt();
            player2.add(player3.get(numSteal));
            player3.remove(numSteal);
            if (stat == 2)
            {
                secondPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2
            if (stat == 02)
            {
                atk.secondPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2Attacked
        }//if p2's choice is Favor & p2 chose p3, then p3 gives a card of p3's choosing to p2
        if (fourChoice.equals("Favor"))
        {
            System.out.println("P3, choose a number to give a card from the hand: " + "(left to right) 0-" + (player3.size()-1));
            int numSteal = scan.nextInt();
            player4.add(player3.get(numSteal));
            player3.remove(numSteal);
            if (stat == 4)
            {
                fourthPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4
            if (stat == 04)
            {
                atk.fourthPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player4Attacked
        }//if p4's choice is Favor & p4 chose p3, then p3 gives a card of p3's choosing to p4
    }//end thirdPlayerFavored method
    public void fourthPlayerFavored(String oneChoice, String twoChoice, String threeChoice, int size, ArrayList<String> EKC, ArrayList<String> player1, ArrayList<String> player2, ArrayList<String> player3, ArrayList<String> player4, int stat) throws IOException
    {
        Attacked atk = new Attacked();
        String p1 = "C:\\Users\\1049467\\Desktop\\EKHand1.txt";
        String p2 = "C:\\Users\\1049467\\Desktop\\EKHand2.txt";
        String p3 = "C:\\Users\\1049467\\Desktop\\EKHand3.txt";
        Scanner scan = new Scanner(System.in);
        if (oneChoice.equals("Favor"))
        {
            System.out.println("P4, choose a number to give a card from the hand: " + "(left to right) 0-" + (player4.size()-1));
            int numSteal = scan.nextInt();
            player1.add(player4.get(numSteal));
            player4.remove(numSteal);
            if (stat == 1)
            {
                firstPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1
            if (stat == 01)
            {
                atk.firstPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player1Attacked
        }//if p1's choice is Favor & p1 chose p4, then p4 gives a card of p4's choosing to p1
        if (twoChoice.equals("Favor"))
        {
            System.out.println("P4, choose a number to give a card from the hand: " + "(left to right) 0-" + (player4.size()-1));
            int numSteal = scan.nextInt();
            player2.add(player4.get(numSteal));
            player4.remove(numSteal);
            if (stat == 2)
            {
                secondPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2
            if (stat == 02)
            {
                atk.secondPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player2Attacked
        }//if p2's choice is Favor & p2 chose p4, then p4 gives a card of p4's choosing to p2
        if (threeChoice.equals("Favor"))
        {
            System.out.println("P4, choose a number to give a card from the hand: " + "(left to right) 0-" + (player4.size()-1));
            int numSteal = scan.nextInt();
            player3.add(player4.get(numSteal));
            player4.remove(numSteal);
            if (stat == 3)
            {
                thirdPlayer("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3
            if (stat == 03)
            {
                atk.thirdPlayerAttacked("null","null","null",size, EKC, player1, player2, player3, player4, stat);
            }//goes back to player3Attacked
        }//if p3's choice is Favor & p3 chose p4, then p4 gives a card of p4's choosing to p3
    }//end fourthPlayerFavored method
}//ends Favored class



